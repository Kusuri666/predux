{"ast":null,"code":"const statez = {\n  Perso: []\n};\nexport const ServicesReducer = (state = statez, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"GET_SUCCEED\":\n      return { ...state,\n        Perso: payload\n      };\n\n    case \"ADD_SUCCED\":\n      return { ...state,\n        Perso: [...state.Perso, payload]\n      };\n\n    case \"DELETE_SUCCED\":\n      return { ...state,\n        Perso: state.Perso.filter(data => data.id != payload)\n      };\n  }\n\n  return state;\n};\n_c = ServicesReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicesReducer\");","map":{"version":3,"sources":["/home/kusuri/Desktop/test/src/redux/reducers.js"],"names":["statez","Perso","ServicesReducer","state","action","type","payload","filter","data","id"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAC;AADK,CAAf;AAIA,OAAQ,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,MAAT,EAAiBI,MAAjB,KAA6B;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACI,SAAO,aAAP;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,KAAK,EAAEK;AAFJ,OAAP;;AAIE,SAAO,YAAP;AACE,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBK,OAAjB;AAFJ,OAAP;;AAKG,SAAO,eAAP;AAEC,aAAU,EAEP,GAAGH,KAFI;AAGPF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAYH,OAAvC;AAHA,OAAV;AAdhB;;AAuBJ,SAAOH,KAAP;AACC,CA1BO;KAAMD,e","sourcesContent":["const statez = {\n    Perso:[]\n};\n\nexport  const ServicesReducer = (state = statez, action ) => {\n    const { type, payload } = action;\n    switch( type) {\n        case   \"GET_SUCCEED\" :\n            return {\n                ...state,\n                Perso: payload \n              }\n              case   \"ADD_SUCCED\":\n                return {\n                    ...state,\n                    Perso: [...state.Perso, payload]\n              \n                   }\n                   case   \"DELETE_SUCCED\":\n                    \n                    return    {\n                       \n                       ...state,\n                       Perso: state.Perso.filter(data => data.id !=  payload  ) \n                      }\n              \n             \n    }\n    \nreturn state\n};"]},"metadata":{},"sourceType":"module"}